{"version":3,"sources":["modals/TaskCreater.jsx","modals/EditTask.jsx","components/TodoCards.jsx","components/TodoList.jsx","App.js","index.js"],"names":["TaskCreator","modal","toggle","save","useState","taskName","setTaskName","description","setDescription","dueDate","setDueDate","priority","setPriority","attachments","setAttachments","handleChange","e","target","name","value","Modal","isOpen","ModalHeader","ModalBody","className","type","onChange","rows","files","map","file","URL","createObjectURL","multiple","ModalFooter","Button","onClick","Name","Description","DueDate","Priority","Attachments","EditTask","updateTask","taskObj","useEffect","update","preventDefault","TodoCards","index","deleteTodo","updateListArray","setModal","timeRemaining","setTimeRemaining","colors","primaryColor","secondaryColor","calculateTimeRemaining","now","Date","diff","days","Math","floor","hours","minutes","interval","setInterval","clearInterval","Card","style","tag","CardBody","CardText","length","attachment","idx","href","rel","toLocaleString","obj","TodoList","taskList","setTaskList","arr","localStorage","getItem","JSON","parse","tempList","splice","setItem","stringify","window","location","reload","editList","TaskCreater","push","App","responseGoogle","response","console","log","profile","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ba91fb5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst TaskCreator = ({ modal, toggle, save }) => {\n    const [taskName, setTaskName] = useState('');\n    const [description, setDescription] = useState('');\n    const [dueDate, setDueDate] = useState('');\n    const [priority, setPriority] = useState('');\n    const [attachments, setAttachments] = useState([]);  // Added attachments state\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        if (name === \"taskName\") {\n            setTaskName(value);\n        } else if (name === \"description\") {\n            setDescription(value);\n        } else if (name === \"dueDate\") {\n            setDueDate(value);\n        } else if (name === \"priority\") {\n            setPriority(value);\n        }\n    };\n\n    const handleFileChange = (e) => {\n        setAttachments([...e.target.files].map(file => URL.createObjectURL(file)));  // Handle file changes\n    };\n\n    const saveTask = () => {\n        let taskObj = {\n            Name: taskName,\n            Description: description,\n            DueDate: dueDate,\n            Priority: priority,\n            Attachments: attachments  // Include attachments\n        };\n        save(taskObj);\n        setTaskName('');\n        setDescription('');\n        setDueDate('');\n        setPriority('');\n        setAttachments([]);  // Reset attachments\n    };\n\n    return (\n        <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle}>Create Your Todo</ModalHeader>\n            <ModalBody>\n                <form>\n                    <div className=\"form-group\">\n                        <label className=\"label\">Task Name:</label>\n                        <input type=\"text\" className=\"form-control\" value={taskName} onChange={handleChange} name=\"taskName\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\">Description:</label>\n                        <textarea className=\"form-control\" rows=\"5\" value={description} onChange={handleChange} name=\"description\"></textarea>\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\">Due Date:</label>\n                        <input type=\"date\" className=\"form-control\" value={dueDate} onChange={handleChange} name=\"dueDate\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\">Priority:</label>\n                        <select className=\"form-control\" value={priority} onChange={handleChange} name=\"priority\">\n                            <option value=\"\">Select Priority</option>\n                            <option value=\"High\">High</option>\n                            <option value=\"Medium\">Medium</option>\n                            <option value=\"Low\">Low</option>\n                        </select>\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\">Attachments:</label>\n                        <input type=\"file\" className=\"form-control\" onChange={handleFileChange} multiple />\n                    </div>\n                </form>\n            </ModalBody>\n            <ModalFooter>\n                <Button className=\"createBtn\" onClick={saveTask}>Create</Button>\n                <Button className=\"cancelBtn\" onClick={toggle}>Cancel</Button>\n            </ModalFooter>\n        </Modal>\n    );\n};\n\nexport default TaskCreator;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst EditTask = ({ modal, toggle, updateTask, taskObj }) => {\n    const [taskName, setTaskName] = useState('');\n    const [description, setDescription] = useState('');\n    const [dueDate, setDueDate] = useState('');  // Added due date state\n    const [priority, setPriority] = useState('');  // Added priority state\n\n    const handleUpdateClick = (e) => {\n        e.preventDefault();\n        update();\n        toggle();\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        if (name === \"taskName\") {\n            setTaskName(value);\n        } else if (name === \"description\") {\n            setDescription(value);\n        } else if (name === \"dueDate\") {  // Handle due date change\n            setDueDate(value);\n        } else if (name === \"priority\") {  // Handle priority change\n            setPriority(value);\n        }\n    };\n\n    useEffect(() => {\n        setTaskName(taskObj.Name);\n        setDescription(taskObj.Description);\n        setDueDate(taskObj.DueDate || '');  // Initialize due date\n        setPriority(taskObj.Priority || '');  // Initialize priority\n    }, [taskObj]);\n\n    const update = () => {\n        let editObj = {\n            Name: taskName,\n            Description: description,\n            DueDate: dueDate,  // Include due date\n            Priority: priority  // Include priority\n        };\n        updateTask(editObj);\n    };\n\n    return (\n        <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle}>Edit Your Todo</ModalHeader>\n            <ModalBody>\n                <form>\n                    <div className=\"form-group\">\n                        <label className=\"label\">Task Name:</label>\n                        <input type=\"text\" className=\"form-control\" value={taskName} onChange={handleChange} name=\"taskName\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\">Description:</label>\n                        <textarea className=\"form-control\" rows=\"5\" value={description} onChange={handleChange} name=\"description\"></textarea>\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\">Due Date:</label>  // Added due date input\n                        <input type=\"date\" className=\"form-control\" value={dueDate} onChange={handleChange} name=\"dueDate\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\">Priority:</label>  // Added priority input\n                        <select className=\"form-control\" value={priority} onChange={handleChange} name=\"priority\">\n                            <option value=\"\">Select Priority</option>\n                            <option value=\"High\">High</option>\n                            <option value=\"Medium\">Medium</option>\n                            <option value=\"Low\">Low</option>\n                        </select>\n                    </div>\n                </form>\n            </ModalBody>\n            <ModalFooter>\n                <Button className=\"createBtn\" onClick={handleUpdateClick}>Update</Button>\n                <Button className=\"cancelBtn\" onClick={toggle}>Cancel</Button>\n            </ModalFooter>\n        </Modal>\n    );\n};\n\nexport default EditTask;\n","import React, { useState, useEffect } from \"react\";\nimport { Card, CardText, CardBody } from 'reactstrap';\nimport EditTask from \"../modals/EditTask\";\n\nconst TodoCards = ({ taskObj, index, deleteTodo, updateListArray }) => {\n    const [modal, setModal] = useState(false);\n    const [timeRemaining, setTimeRemaining] = useState(\"\");\n\n    const colors = [\n        { primaryColor: \"rgb(77, 226, 72)\", secondaryColor: \"rgba(77, 226, 72, 0.315)\" },\n        { primaryColor: \"rgb(255, 210, 60)\", secondaryColor: \"rgba(255, 209, 60, 0.619)\" },\n        { primaryColor: \"#5D93E1\", secondaryColor: \"rgba(58, 104, 255, 0.301)\" },\n        { primaryColor: \"rgb(255, 57, 57)\", secondaryColor: \"rgba(255, 57, 57, 0.424)\" },\n        { primaryColor: \"rgb(135, 60, 255)\", secondaryColor: \"rgba(135, 60, 255, 0.424)\" },\n        { primaryColor: \"rgb(255, 85, 43)\", secondaryColor: \"rgba(255, 85, 43, 0.424)\" }\n    ];\n\n    const deleteCard = () => {\n        deleteTodo(index);\n    };\n\n    const toggle = () => {\n        setModal(!modal);\n    };\n\n    const updateTask = (obj) => {\n        updateListArray(obj, index);\n    };\n\n    const calculateTimeRemaining = (dueDate) => {\n        const now = new Date();\n        const due = new Date(dueDate);\n        const diff = due - now;\n\n        if (diff <= 0) {\n            return \"Due date passed\";\n        }\n\n        const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n        const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n\n        return `${days}d ${hours}h ${minutes}m remaining`;\n    };\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setTimeRemaining(calculateTimeRemaining(taskObj.DueDate));\n        }, 60000);  // Update every minute\n\n        return () => clearInterval(interval);\n    }, [taskObj.DueDate]);\n\n    useEffect(() => {\n        setTimeRemaining(calculateTimeRemaining(taskObj.DueDate));\n    }, [taskObj.DueDate]);\n\n    return (\n        <Card className=\"mb-3\" style={{ \"borderBottom\": `4px solid ${colors[index % 6].primaryColor}`, \"minHeight\": \"250px\", \"marginBottom\": \"20px\",\"margin\":\"10px\" }}>\n            <h5 tag=\"h5\" className=\"card-header name\" style={{ \"backgroundColor\": colors[index % 6].secondaryColor }}>{taskObj.Name}</h5>\n            <CardBody>\n                <CardText className=\"card-text desc\">{taskObj.Description}</CardText>\n                {taskObj.Attachments && taskObj.Attachments.length > 0 && (\n                    <div className=\"attachments-banner\">\n                        {taskObj.Attachments.map((attachment, idx) => (\n                            <a key={idx} href={attachment} target=\"_blank\" rel=\"noopener noreferrer\" className=\"attachment-link\">\n                                Attachment {idx + 1}\n                            </a>\n                        ))}\n                    </div>\n                )}\n                {taskObj.DueDate && (\n                    <div className=\"due-date\">\n                        <p style={{ \"color\": colors[index % 6].primaryColor }}>Due Date: {new Date(taskObj.DueDate).toLocaleString()}</p>\n                        <p style={{ \"color\": colors[index % 6].primaryColor }}>{timeRemaining}</p>\n                    </div>\n                )}\n                <div className=\"icons\">\n                    <i className=\"far fa-edit edit\" style={{ \"color\": colors[index % 6].primaryColor, \"cursor\": \"pointer\", \"marginRight\": \"10px\" }} onClick={() => setModal(true)}></i>\n                    <i className=\"fas fa-trash\" style={{ \"color\": colors[index % 6].primaryColor, \"cursor\": \"pointer\" }} onClick={deleteCard}></i>\n                </div>\n            </CardBody>\n            <EditTask modal={modal} toggle={toggle} updateTask={updateTask} taskObj={taskObj} />\n        </Card>\n    );\n};\n\nexport default TodoCards;\n","import React,{useState,useEffect} from \"react\"\nimport TaskCreater from '../modals/TaskCreater'\nimport TodoCard from \"./TodoCards\"\n\nconst TodoList = ()=>{\n    const [modal, setModal] = useState(false);\n    const [taskList, setTaskList] = useState([]);\n\n    useEffect(()=>{\n        let arr = localStorage.getItem(\"taskList\")\n        if(arr){\n            let obj = JSON.parse(arr)\n            setTaskList(obj)\n        }\n    },[])\n\n    const toggle = () =>{\n        setModal(!modal);\n    }\n\n    const saveTask = (taskObj) => {\n        let tempList = taskList\n        tempList.push(taskObj)\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\n        setTaskList(tempList)\n        setModal(false)\n    }\n\n    const deleteTodo = (index) => {\n        let tempList = taskList\n        tempList.splice(index,1)\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\n        setTaskList(tempList)\n        window.location.reload()\n    }\n\n    const updateListArray = (obj, index) => {\n        let editList = taskList\n        editList[index] = obj\n        localStorage.setItem(\"taskList\", JSON.stringify(editList))\n        setTaskList(editList)\n        window.location.reload();\n\n    }\n\n   return(\n       <div className=\"wrapper\">\n         <div className=\"top text-center\">\n             <h3 className=\"title\">Todo List</h3>\n             <button className=\"create-Btn\" onClick={()=> setModal(true)}>Create a new Task</button>\n         </div>\n         <div className=\"card-wrapper\">\n             {taskList && taskList.map((obj, index) => <TodoCard taskObj={obj} index={index} deleteTodo = {deleteTodo} updateListArray={updateListArray}/>)}\n\n         </div>\n         <TaskCreater toggle={toggle} modal={modal} save = {saveTask}/>\n       </div>\n   );\n};\n\nexport default TodoList;","import React, {Component} from \"react\"\nimport TodoList from \"./components/TodoList\"\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport GoogleLogin from \"react-google-login\";\n\nexport class App extends Component {\n  responseGoogle=(response)=>{\n    console.log(response.profile.name)\n  }\n  render(){\n  return (\n    <>\n     \n      <TodoList/>\n    </>\n  )\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}